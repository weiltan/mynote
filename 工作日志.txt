hotfix引起的三方面问题：
1. 个人工作进度的耽误， 同事工作进度的耽误。 除了改代码外，还要QA，还要写上线文档。
2. 团队气氛的不良影响， 由于scrum master不听取众人（开发、QA）的建议， 导致了额外的hotfix， 影响了团队的合作气氛。
3. 绩效考核也因此收到影响。 
8:54 2016-9-9  团队气氛是scrum master带出来的， 这次也是由他糟蹋的。 看他采取的措施 是否能恢复良好的团队气氛。 8:56 2016-9-9

配置文件， 阿里云队列 一起要部署到 QA。 17:34 2016-9-8

多记忆工作内容。 11:46 2016-9-8  即利用HashMap加快大脑检索速度。 直接背下来自己写的类名、方法名。 树状结构串起来。 11:51 2016-9-8

他的缺点让你恼火的时候， 想想他的优点。 然后，事情 是大家的。 11:06 2016-9-8 总结下来， 就是不能依赖他，不能“信任”他。 11:29 2016-9-8  奶奶的， 太喜欢抱怨了。 问题解决后， 觉得问题也没那么大！ 11:58 2016-9-8

新项目，术语的定义。 歧义的消除。 13:35 2016-9-7

工作事务上的专制， 生活事务的随和。 zk。 13:34 2016-9-7

文档中，不用我们，他们这些代词， 避免引起歧义。 11:11 2016-9-7

众口难调啊， 写个站会记录模版， 都会有不同意见， 也不愿意自己去改。 11:00 2016-9-7

如果采取了同事的正确意见， 就能预防hotfix。 21:06 2016-9-6

bug及时上线， 避免使用方的催促， 导致的hotfix。 不应因为bug不危险，就不重视， 使用方觉得可用性同样很重要。 18:33 2016-9-6

QA的建议，还是要听的。 11:12 2016-9-6

程序员协助codereview 的时候应该不主动去解释代码的意图， 让reviewer去理解去提问。 11:57 2016-9-5

开发一个容错健壮的、完备的软件，还是件要求高、全的事情。 13:14 2016-9-3

账务三个还款计划表， 有歧义， 用错还款计划表。
loan_object, payment_object 用户数据库表。 
14:35 2016-9-1

还是急了，文字话语编辑最终发送的时候，导致还是语句不通顺。 10:54 2016-9-1

关注业务， 重视业务。 16:10 2016-8-31  加快task任务开发。 16:26 2016-8-31  不关注业务，就是不关注money啊。 16:39 2016-8-31 额，不感兴趣，都被看出来了。。。 18:06 2016-8-31

不好好工作， 一天到晚策。 11:57 2016-8-31

自己理需求。 17:43 2016-8-30 自己调研需求，理上下文。 20:26 2016-8-30

抱怨系，抱怨声过多。 12:29 2016-8-30

业务知识。 10:41 2016-8-30

专业精神，工作不骄不躁，专业的性格，科学民主，逆水行舟，不卑不亢。 18:05 2016-8-29

邮件使用规则， 蓝色：所在项目组（重要）的邮件。  16:07 2016-8-29   绿色：技术业务点。 13:51 2016-9-1  橙色：公司级别（重要）邮件。 11:35 2016-9-5

理论体系不一样，同事的。 15:43 2016-8-29

便签使用规则， 黄色：正在做的task； 白色：将要做的task。 16:19 2016-8-29 蓝色：业务点。 20:48 2016-8-30

分布式工作事件处理思维。 15:07 2016-8-29  用便签，管理记录各项工作，实现快速切换工作场景。 18:20 2016-8-29

同事的工作风格、习惯。 12:18 2016-8-29

去做就好了，想太多了。 14:15 2016-8-27

先完成自己的工作，再补业务的课吧。 10:25 2016-8-23

经融业务培训、项目业务培训。 10:12 2016-8-23

公司没有代码库。 10:41 2016-8-22

kindle阅读器的水墨文字，是立体的吧。 13:26 2016-8-21

所谓比赛好看、精彩， 就是实力相当的对手互啄。 13:26 2016-8-21

什么都想超过、压过下属的小leader，没有发挥出下属和领导的，层级间合作所能发挥出的优势。 10:10 2016-8-17

浮躁， 听歌。 静下来。 15:57 2016-8-16

养着， 有事情的时候， 能发挥出应有的作用。 10:59 2016-8-15

过于注重展现自己的想法。 10:17 2016-8-8

逗大家一乐。 13:44 2016-8-6

不认识里的人， 微信群里， 也不会回你信息。 13:40 2016-8-6

同步，是意见复杂的事情。不止是计算机、数据库系统，人与人的对同一事务的理解，人与人的性格的理解，要同步，都难以。 11:34 2016-8-6

不要轻易干预小leader的话，  他有他的用意。 15:32 2016-8-3

你的代码，会重复，会做无用功， 不保证， 一次到位。 所以， 存在代码翻改。 12:21 2016-7-31

新项目，过一篇是不稳的。 11:32 2016-7-31

不闹腾了， 静心。（和工作环境也有关系） 学习的态度去工作， 持续学习， 持续成熟， 持续强大。 9:44 2016-7-31

与各个同事沟通交流。 11:47 2016-7-28

打乒乓球， 只有一拍， 没有第二拍、第三拍。  也就是说， 缺乏套路。 15:03 2016-7-23

我们来比一比， 谁的帽子 ，  更好看。  12:37 2016-7-23

自己的注释写好， 就好啦。  9:49 2016-7-23  自己同样要学习， 如何写好规范的注释。  9:59 2016-7-23

代码CC， PRD是什么  17:10 2016-7-22

简单问题给出简单解决方案，  复杂问题，  为解决复杂问题 打下基石。  12:28 2016-7-22

找韵味确认安全权限， 规范同事的操作合规，   还有其它  scrum leader 需要考虑的问题。  11:20 2016-7-22

单点部署问题。 14:24 2016-7-21

自己写的文档， 要让自己， 一个月以后， 要让 外层人员 也能简单易懂的看懂。  11:23 2016-7-19

来一份的 香辣蛋干，好吃。 9:56 2016-7-19

定义接口，定义接口，  画饼，画饼。  18:06 2016-7-18

举例法， 还是解释问题的好方法。 14:55 2016-7-18  消除歧义的好方法。 15:07 2016-7-18

多任务并发环境，  同步互斥操作，  同步控制，  异步通信。  15:57 2016-7-15

批判的态度，要求自己的工作。  15:38 2016-7-15

设计方案，  不可能一不到位，  尽量 靠齐实施方案。  11:43 2016-7-15

IDE工具的使用，大幅提高效率，IDE reference功能， git的代码库管理功能。  11:42 2016-7-15

鼓励同事、关心同事的工作、肯定同事的努力。  21:34 2016-7-14

设计方案的设计者， 得有个全局的把握，  技术、业务、框架、经验。  14:09 2016-7-14

maven 子项目，  Spring注入，  业务流程。 14:08 2016-7-14

仅从代码的角度去重构一个项目，真滴难。要有业务背景，业务知识。  17:23 2016-7-13

OSS/MNS开发  15:09 2016-7-13

先写设计文档，先写接口，再coding的工作方式。 10:24 2016-7-13

高级音响，应用于电话电视会议。 16:22 2016-7-8

cai哥，好胜心，好强。  14:38 2016-7-8

复刻原来系统的时候，用现有的框架，解耦合。  11:17 2016-7-8   常量，以API的形式，让对方来调用，而不是集中放在一个Base项目里面。 11:23 2016-7-8

星巴克，相对来说，是比较丰富的产品。 然而在欧洲则不然，在欧洲，丰富的产品很多，因此，在欧洲，星巴克的逼格并没有那么高，没有在中国那么高。  16:26 2016-7-7

没睡好觉的自己，刚醒来时，很冷漠啊。  15:00 2016-7-7

kaibo给文档给得少。 9:22 2016-7-7   kaibo中午不用睡午觉的神功是怎么练成的？喝咖啡喝出来的？  15:01 2016-7-7

带着风险前进？ 9:18 2016-7-7

kaibo问我这个问题的时候，我脑袋里浮现的是，炫耀，失去一线同事的交心，升了之后会和气同事会失去原本所有的保护同事心理，对业务不够了解，对任务划分和时间估算表示无力，对工具的使用表示不完全了解。  19:34 2016-7-6  
问题在于可以改进的地方在哪里， 机会在我权衡之后选择放弃， 可能没有下个机会了啊！1.生活不像炒菜，不可能什么都准备好了才做。2.不要打肿脸冲胖子。我悲观的选择了2。  19:36 2016-7-6
自己一堆事情都还没搞清楚，所以，懒得去管别人。 9:18 2016-7-7   包括自己的工作状态也有待调理好。  9:19 2016-7-7

扁平的公司的形态，让新员工有被拥抱的感觉。 10:44 2016-7-6

Shry业务能力不强，同事关系较好，位置很高的，官老太太，得伺候着。  9:41 2016-7-6  锅被甩出去了。 10:44 2016-7-6

帅哥喜欢美女，美女喜欢帅哥。物以类聚。  17:11 2016-7-5

基于发布成果，有不断的更新自己的版本，所以，导致版本号很多。15:26 2016-7-5

平台的锅，还是别提了。做好自己的事情。21:14 2016-7-4

业务为主，业务为主，搞懂业务，代码业务，项目业务，项目依赖关系。20:39 2016-7-4公司毕竟是业务公司，非科技公司，业务胜于代码，搞清楚公司对自己的需求是什么。21:16 2016-7-4

“对业务不了解，没有了解整个业务，我们需要了解业务”
“问问题，几个问题总结好，一起问，不然也耽误大家时间。”
“也不要奢望所有的系统都了解，先做好一块，让大家信任你。”20:32 2016-7-4
信任问题，互不了解问题。20:52 2016-7-4

晗哥的勤奋工作态度，值得学习。 11:37 2016-7-3

中国的主动防御挺不错的。 主动防御。 11:37 2016-7-3

真正的需求。11:17 2016-7-3 理解需求。11:18 2016-7-3  上级提个方向，你要去搞清楚具体的、抽象的、接口的内容。11:18 2016-7-3

不仅要会写代码， 还要培养总结代码， 传递代码功能的总结概括能力， 在抽象全局层面， 不纠结于具体细节。 10:53 2016-7-3

这人员调动，猝不及防啊。9:48 2016-7-1

zookeeper的使用目的：（1）针对恶意房款申请；（2）针对程序（逻辑）本身错误。9:48 2016-7-1

不对啊，你的发现，你的review也算你的工作，应该由你去做。而不是随意给别人去改什么的。  16:09 2016-6-29  不过公司现在对性能要求，还不是很高咯。  16:10 2016-6-29

测出一个bug出来，很有成就感。
一个task，三个环境都要测。--zhaoyk  15:04 2016-6-29

BUG：改按钮显示，改了一个网页， 没改另一个网页。另一个同样代码的页面。11:16 2016-6-29

熠魁的测试报告是手动生成的？
买单侠融资系统  流程说明图 是用什么工具画的？10:26 2016-6-29

自己是不是太狭隘了。关注面太小。 10:09 2016-6-22

写代码，往逻辑上写，往可读性写，性能，高重用，高性价比。15:40 2016-6-17

提前定义好接口。10:34 2016-6-15

问：“干得过支付宝吗”
胡：“问题不对，应该是干得过借呗吗”，“一个是线上一个是线下”
“广告看投入产出比”
“长期客户获利高，如果不高的话，说明这个市场不对，要换市场了”
问：“怎么分析出这个市场的”
“通过排除法，考虑了市场壁垒，技术壁垒，规避支付宝等大公司的市场，分析出来的”
“去过线下考察”
“和京东撞库，千分之七的重合率”
“好坏客户，高利率吸引坏客户，好人不愿意等待，所以要服务好”
“做金融的时候，我们客户被我们称为韭菜，收获用户就是收获韭菜”
问：“不投资金融产品？钱不是在贬值吗”
“金融产品也贬值”。14:50 2016-6-14
13:27 2016-6-14
问“人太少”
答“楼下的一层可以坐下百来个人，我们要做到高杠杆的产出”
"员工都买短期P2P产品"
“去二三线城市实地调查过”

大家都，允许、听取、尊重同事的意见。15:41 2016-6-13

要超越自己的习惯，更好的做事，才能满足leader的要求。15:33 2016-6-13

OKR的制定，可度量，需要Review，按工作日算，按工作小时算。15:33 2016-6-13

帮助新员工，不能坐在那里不动，要主动。-- jacky。15:30 2016-6-13
